{"version":3,"file":"charts.js","sources":["../../../projects/charts/src/lib/chart/chart.component.ts","../../../projects/charts/src/lib/chart/chart.component.html","../../../projects/charts/src/lib/ng-apexcharts.module.ts","../../../projects/charts/src/lib/model/apex-types.ts","../../../projects/charts/src/public-api.ts","../../../projects/charts/src/charts.ts"],"sourcesContent":["import {\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  OnDestroy,\r\n  SimpleChanges,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport {\r\n  ApexAnnotations,\r\n  ApexAxisChartSeries,\r\n  ApexChart,\r\n  ApexDataLabels,\r\n  ApexFill,\r\n  ApexGrid,\r\n  ApexLegend,\r\n  ApexNonAxisChartSeries,\r\n  ApexMarkers,\r\n  ApexNoData,\r\n  ApexPlotOptions,\r\n  ApexResponsive,\r\n  ApexStates,\r\n  ApexStroke,\r\n  ApexTheme,\r\n  ApexTitleSubtitle,\r\n  ApexTooltip,\r\n  ApexXAxis,\r\n  ApexYAxis,\r\n} from \"../model/apex-types\";\r\nimport { asapScheduler } from \"rxjs\";\r\n\r\nimport * as ApexCharts from \"apexcharts\";\r\n\r\n@Component({\r\n  selector: \"apx-chart\",\r\n  templateUrl: \"./chart.component.html\",\r\n  styleUrls: [\"./chart.component.css\"],\r\n})\r\nexport class ChartComponent implements OnInit, OnChanges, OnDestroy {\r\n  @Input() chart: ApexChart;\r\n  @Input() annotations: ApexAnnotations;\r\n  @Input() colors: any[];\r\n  @Input() dataLabels: ApexDataLabels;\r\n  @Input() series: ApexAxisChartSeries | ApexNonAxisChartSeries;\r\n  @Input() stroke: ApexStroke;\r\n  @Input() labels: string[];\r\n  @Input() legend: ApexLegend;\r\n  @Input() markers: ApexMarkers;\r\n  @Input() noData: ApexNoData;\r\n  @Input() fill: ApexFill;\r\n  @Input() tooltip: ApexTooltip;\r\n  @Input() plotOptions: ApexPlotOptions;\r\n  @Input() responsive: ApexResponsive[];\r\n  @Input() xaxis: ApexXAxis;\r\n  @Input() yaxis: ApexYAxis | ApexYAxis[];\r\n  @Input() grid: ApexGrid;\r\n  @Input() states: ApexStates;\r\n  @Input() title: ApexTitleSubtitle;\r\n  @Input() subtitle: ApexTitleSubtitle;\r\n  @Input() theme: ApexTheme;\r\n\r\n  @Input() autoUpdateSeries = true;\r\n\r\n  @ViewChild(\"chart\", { static: true }) private chartElement: ElementRef;\r\n  private chartObj: any;\r\n\r\n  ngOnInit() {\r\n    asapScheduler.schedule(() => {\r\n      this.createElement();\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    asapScheduler.schedule(() => {\r\n      if (\r\n        this.autoUpdateSeries &&\r\n        Object.keys(changes).filter((c) => c !== \"series\").length === 0\r\n      ) {\r\n        this.updateSeries(this.series, true);\r\n        return;\r\n      }\r\n\r\n      this.createElement();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.chartObj) {\r\n      this.chartObj.destroy();\r\n    }\r\n  }\r\n\r\n  private createElement() {\r\n    const options: any = {};\r\n\r\n    if (this.annotations) {\r\n      options.annotations = this.annotations;\r\n    }\r\n    if (this.chart) {\r\n      options.chart = this.chart;\r\n    }\r\n    if (this.colors) {\r\n      options.colors = this.colors;\r\n    }\r\n    if (this.dataLabels) {\r\n      options.dataLabels = this.dataLabels;\r\n    }\r\n    if (this.series) {\r\n      options.series = this.series;\r\n    }\r\n    if (this.stroke) {\r\n      options.stroke = this.stroke;\r\n    }\r\n    if (this.labels) {\r\n      options.labels = this.labels;\r\n    }\r\n    if (this.legend) {\r\n      options.legend = this.legend;\r\n    }\r\n    if (this.fill) {\r\n      options.fill = this.fill;\r\n    }\r\n    if (this.tooltip) {\r\n      options.tooltip = this.tooltip;\r\n    }\r\n    if (this.plotOptions) {\r\n      options.plotOptions = this.plotOptions;\r\n    }\r\n    if (this.responsive) {\r\n      options.responsive = this.responsive;\r\n    }\r\n    if (this.markers) {\r\n      options.markers = this.markers;\r\n    }\r\n    if (this.noData) {\r\n      options.noData = this.noData;\r\n    }\r\n    if (this.xaxis) {\r\n      options.xaxis = this.xaxis;\r\n    }\r\n    if (this.yaxis) {\r\n      options.yaxis = this.yaxis;\r\n    }\r\n    if (this.grid) {\r\n      options.grid = this.grid;\r\n    }\r\n    if (this.states) {\r\n      options.states = this.states;\r\n    }\r\n    if (this.title) {\r\n      options.title = this.title;\r\n    }\r\n    if (this.subtitle) {\r\n      options.subtitle = this.subtitle;\r\n    }\r\n    if (this.theme) {\r\n      options.theme = this.theme;\r\n    }\r\n\r\n    if (this.chartObj) {\r\n      this.chartObj.destroy();\r\n    }\r\n\r\n    this.chartObj = new ApexCharts(this.chartElement.nativeElement, options);\r\n\r\n    this.render();\r\n  }\r\n\r\n  public render(): Promise<void> {\r\n    return this.chartObj.render();\r\n  }\r\n\r\n  public updateOptions(\r\n    options: any,\r\n    redrawPaths?: boolean,\r\n    animate?: boolean,\r\n    updateSyncedCharts?: boolean\r\n  ): Promise<void> {\r\n    return this.chartObj.updateOptions(\r\n      options,\r\n      redrawPaths,\r\n      animate,\r\n      updateSyncedCharts\r\n    );\r\n  }\r\n\r\n  public updateSeries(\r\n    newSeries: ApexAxisChartSeries | ApexNonAxisChartSeries,\r\n    animate?: boolean\r\n  ) {\r\n    this.chartObj.updateSeries(newSeries, animate);\r\n  }\r\n\r\n  public appendSeries(\r\n    newSeries: ApexAxisChartSeries | ApexNonAxisChartSeries,\r\n    animate?: boolean\r\n  ) {\r\n    this.chartObj.appendSeries(newSeries, animate);\r\n  }\r\n\r\n  public appendData(newData: any[]) {\r\n    this.chartObj.appendData(newData);\r\n  }\r\n\r\n  public toggleSeries(seriesName: string): any {\r\n    return this.chartObj.toggleSeries(seriesName);\r\n  }\r\n\r\n  public showSeries(seriesName: string) {\r\n    this.chartObj.showSeries(seriesName);\r\n  }\r\n\r\n  public hideSeries(seriesName: string) {\r\n    this.chartObj.hideSeries(seriesName);\r\n  }\r\n\r\n  public resetSeries() {\r\n    this.chartObj.resetSeries();\r\n  }\r\n\r\n  public zoomX(min: number, max: number) {\r\n    this.chartObj.zoomX(min, max);\r\n  }\r\n\r\n  public toggleDataPointSelection(\r\n    seriesIndex: number,\r\n    dataPointIndex?: number\r\n  ) {\r\n    this.chartObj.toggleDataPointSelection(seriesIndex, dataPointIndex);\r\n  }\r\n\r\n  public destroy() {\r\n    this.chartObj.destroy();\r\n  }\r\n\r\n  public setLocale(localeName?: string) {\r\n    this.chartObj.setLocale(localeName);\r\n  }\r\n\r\n  public paper() {\r\n    this.chartObj.paper();\r\n  }\r\n\r\n  public addXaxisAnnotation(\r\n    options: any,\r\n    pushToMemory?: boolean,\r\n    context?: any\r\n  ) {\r\n    this.chartObj.addXaxisAnnotation(options, pushToMemory, context);\r\n  }\r\n\r\n  public addYaxisAnnotation(\r\n    options: any,\r\n    pushToMemory?: boolean,\r\n    context?: any\r\n  ) {\r\n    this.chartObj.addYaxisAnnotation(options, pushToMemory, context);\r\n  }\r\n\r\n  public addPointAnnotation(\r\n    options: any,\r\n    pushToMemory?: boolean,\r\n    context?: any\r\n  ) {\r\n    this.chartObj.addPointAnnotation(options, pushToMemory, context);\r\n  }\r\n\r\n  public removeAnnotation(id: string, options?: any) {\r\n    this.chartObj.removeAnnotation(id, options);\r\n  }\r\n\r\n  public clearAnnotations(options?: any) {\r\n    this.chartObj.clearAnnotations(options);\r\n  }\r\n\r\n  public dataURI(): Promise<void> {\r\n    return this.chartObj.dataURI();\r\n  }\r\n}\r\n","<div #chart></div>\r\n","import { NgModule } from \"@angular/core\";\r\nimport { ChartComponent } from \"./chart/chart.component\";\r\nimport * as ApexCharts from \"apexcharts\";\r\n\r\ndeclare global {\r\n  interface Window {\r\n    ApexCharts: any;\r\n  }\r\n}\r\n\r\nif(window) {\r\n  window.ApexCharts = ApexCharts;\r\n}\r\n\r\nconst declerations = [ChartComponent];\r\n\r\n@NgModule({\r\n  declarations: [...declerations],\r\n  imports: [],\r\n  exports: [...declerations],\r\n})\r\nexport class NgApexchartsModule {}\r\n","// export declare class ApexCharts {\r\n//   constructor(el: any, options: ApexOptions);\r\n//   static exec(chartID: string, fn: () => void, options: any): any;\r\n//   static initOnLoad(): void;\r\n//   render(): Promise<void>;\r\n//   updateOptions(options: any, redrawPaths: boolean, animate: boolean, updateSyncedCharts: boolean): Promise<void>;\r\n//   updateSeries(newSeries: ApexAxisChartSeries | ApexNonAxisChartSeries, animate: boolean): void;\r\n//   toggleSeries(seriesName: string): void;\r\n//   destroy(): void;\r\n//   addXaxisAnnotation(options: any, pushToMemory?: boolean, context?: any): void;\r\n//   addYaxisAnnotation(options: any, pushToMemory?: boolean, context?: any): void;\r\n//   addPointAnnotation(options: any, pushToMemory?: boolean, context?: any): void;\r\n//   addText(options: any, pushToMemory?: boolean, context?: any): void;\r\n//   dataURI(): void;\r\n// }\r\n\r\nexport interface ApexOptions {\r\n  annotations?: ApexAnnotations;\r\n  chart?: ApexChart;\r\n  colors?: any[];\r\n  dataLabels?: ApexDataLabels;\r\n  series?: ApexAxisChartSeries | ApexNonAxisChartSeries;\r\n  stroke?: ApexStroke;\r\n  labels?: string[];\r\n  legend?: ApexLegend;\r\n  fill?: ApexFill;\r\n  tooltip?: ApexTooltip;\r\n  plotOptions?: ApexPlotOptions;\r\n  responsive?: ApexResponsive[];\r\n  markers?: ApexMarkers;\r\n  noData?: ApexNoData;\r\n  xaxis?: ApexXAxis;\r\n  yaxis?: ApexYAxis | ApexYAxis[];\r\n  grid?: ApexGrid;\r\n  states?: ApexStates;\r\n  title?: ApexTitleSubtitle;\r\n  subtitle?: ApexTitleSubtitle;\r\n  theme?: ApexTheme;\r\n}\r\n\r\ninterface ApexDropShadow {\r\n  enabled?: boolean;\r\n  top?: number;\r\n  left?: number;\r\n  blur?: number;\r\n  opacity?: number;\r\n  color?: string;\r\n}\r\n\r\n/**\r\n * Main Chart options\r\n * See https://apexcharts.com/docs/options/chart/\r\n */\r\nexport interface ApexChart {\r\n  width?: string | number;\r\n  height?: string | number;\r\n  type: ChartType;\r\n  foreColor?: string;\r\n  fontFamily?: string;\r\n  background?: string;\r\n  offsetX?: number;\r\n  offsetY?: number;\r\n  dropShadow?: ApexDropShadow & {\r\n    enabledOnSeries?: undefined | number[];\r\n    color?: string | string[];\r\n  };\r\n  events?: {\r\n    animationEnd?(chart: any, options?: any): void;\r\n    beforeMount?(chart: any, options?: any): void;\r\n    mounted?(chart: any, options?: any): void;\r\n    updated?(chart: any, options?: any): void;\r\n    mouseMove?(e: any, chart?: any, options?: any): void;\r\n    click?(e: any, chart?: any, options?: any): void;\r\n    legendClick?(chart: any, seriesIndex?: number, options?: any): void;\r\n    markerClick?(e: any, chart?: any, options?: any): void;\r\n    selection?(chart: any, options?: any): void;\r\n    dataPointSelection?(e: any, chart?: any, options?: any): void;\r\n    dataPointMouseEnter?(e: any, chart?: any, options?: any): void;\r\n    dataPointMouseLeave?(e: any, chart?: any, options?: any): void;\r\n    beforeZoom?(chart: any, options?: any): void;\r\n    beforeResetZoom?(chart: any, options?: any): void;\r\n    zoomed?(chart: any, options?: any): void;\r\n    scrolled?(chart: any, options?: any): void;\r\n    brushScrolled?(chart: any, options?: any): void;\r\n  };\r\n  brush?: {\r\n    enabled?: boolean;\r\n    autoScaleYaxis?: boolean;\r\n    target?: string;\r\n  };\r\n  id?: string;\r\n  group?: string;\r\n  locales?: ApexLocale[];\r\n  defaultLocale?: string;\r\n  parentHeightOffset?: number;\r\n  redrawOnParentResize?: boolean;\r\n  redrawOnWindowResize?: boolean | Function;\r\n  sparkline?: {\r\n    enabled?: boolean;\r\n  };\r\n  stacked?: boolean;\r\n  stackType?: \"normal\" | \"100%\";\r\n  toolbar?: {\r\n    show?: boolean;\r\n    offsetX?: number;\r\n    offsetY?: number;\r\n    tools?: {\r\n      download?: boolean | string;\r\n      selection?: boolean | string;\r\n      zoom?: boolean | string;\r\n      zoomin?: boolean | string;\r\n      zoomout?: boolean | string;\r\n      pan?: boolean | string;\r\n      reset?: boolean | string;\r\n      customIcons?: {\r\n        icon?: string;\r\n        title?: string;\r\n        index?: number;\r\n        class?: string;\r\n        click?(chart?: any, options?: any, e?: any): any;\r\n      }[];\r\n    };\r\n    export?: {\r\n      csv?: {\r\n        filename?: undefined | string;\r\n        columnDelimiter?: string;\r\n        headerCategory?: string;\r\n        headerValue?: string;\r\n        dateFormatter?(timestamp?: number): any;\r\n      };\r\n      svg?: {\r\n        filename?: undefined | string;\r\n      };\r\n      png?: {\r\n        filename?: undefined | string;\r\n      };\r\n    };\r\n    autoSelected?: \"zoom\" | \"selection\" | \"pan\";\r\n  };\r\n  zoom?: {\r\n    enabled?: boolean;\r\n    type?: \"x\" | \"y\" | \"xy\";\r\n    autoScaleYaxis?: boolean;\r\n    zoomedArea?: {\r\n      fill?: {\r\n        color?: string;\r\n        opacity?: number;\r\n      };\r\n      stroke?: {\r\n        color?: string;\r\n        opacity?: number;\r\n        width?: number;\r\n      };\r\n    };\r\n  };\r\n  selection?: {\r\n    enabled?: boolean;\r\n    type?: string;\r\n    fill?: {\r\n      color?: string;\r\n      opacity?: number;\r\n    };\r\n    stroke?: {\r\n      width?: number;\r\n      color?: string;\r\n      opacity?: number;\r\n      dashArray?: number;\r\n    };\r\n    xaxis?: {\r\n      min?: number;\r\n      max?: number;\r\n    };\r\n    yaxis?: {\r\n      min?: number;\r\n      max?: number;\r\n    };\r\n  };\r\n  animations?: {\r\n    enabled?: boolean;\r\n    easing?: \"linear\" | \"easein\" | \"easeout\" | \"easeinout\";\r\n    speed?: number;\r\n    animateGradually?: {\r\n      enabled?: boolean;\r\n      delay?: number;\r\n    };\r\n    dynamicAnimation?: {\r\n      enabled?: boolean;\r\n      speed?: number;\r\n    };\r\n  };\r\n}\r\n\r\nexport interface ApexStates {\r\n  normal?: {\r\n    filter?: {\r\n      type?: string;\r\n      value?: number;\r\n    };\r\n  };\r\n  hover?: {\r\n    filter?: {\r\n      type?: string;\r\n      value?: number;\r\n    };\r\n  };\r\n  active?: {\r\n    allowMultipleDataPointsSelection?: boolean;\r\n    filter?: {\r\n      type?: string;\r\n      value?: number;\r\n    };\r\n  };\r\n}\r\n\r\n/**\r\n * Chart Title options\r\n * See https://apexcharts.com/docs/options/title/\r\n */\r\nexport interface ApexTitleSubtitle {\r\n  text?: string;\r\n  align?: \"left\" | \"center\" | \"right\";\r\n  margin?: number;\r\n  offsetX?: number;\r\n  offsetY?: number;\r\n  floating?: boolean;\r\n  style?: {\r\n    fontSize?: string;\r\n    fontFamily?: string;\r\n    fontWeight?: string | number;\r\n    color?: string;\r\n  };\r\n}\r\n\r\n/**\r\n * Chart Series options.\r\n * Use ApexNonAxisChartSeries for Pie and Donut charts.\r\n * See https://apexcharts.com/docs/options/series/\r\n */\r\nexport type ApexAxisChartSeries = {\r\n  name?: string;\r\n  type?: string;\r\n  color?: string;\r\n  data:\r\n    | (number | null)[]\r\n    | { x: any; y: any; fillColor?: string; strokeColor?: string }[]\r\n    | [number, number | null][]\r\n    | [number, (number | null)[]][];\r\n}[];\r\n\r\nexport type ApexNonAxisChartSeries = number[];\r\n\r\n/**\r\n * Options for the line drawn on line and area charts.\r\n * See https://apexcharts.com/docs/options/stroke/\r\n */\r\nexport interface ApexStroke {\r\n  show?: boolean;\r\n  curve?:\r\n    | \"smooth\"\r\n    | \"straight\"\r\n    | \"stepline\"\r\n    | (\"smooth\" | \"straight\" | \"stepline\")[];\r\n  lineCap?: \"butt\" | \"square\" | \"round\";\r\n  colors?: string[];\r\n  width?: number | number[];\r\n  dashArray?: number | number[];\r\n}\r\n\r\nexport interface ApexAnnotations {\r\n  position?: string;\r\n  yaxis?: YAxisAnnotations[];\r\n  xaxis?: XAxisAnnotations[];\r\n  points?: PointAnnotations[];\r\n  texts?: TextAnnotations[];\r\n  images?: ImageAnnotations[];\r\n}\r\nexport interface AnnotationLabel {\r\n  borderColor?: string;\r\n  borderWidth?: number;\r\n  borderRadius?: number;\r\n  text?: string;\r\n  textAnchor?: string;\r\n  offsetX?: number;\r\n  offsetY?: number;\r\n  style?: AnnotationStyle;\r\n  position?: string;\r\n  orientation?: string;\r\n}\r\nexport interface AnnotationStyle {\r\n  background?: string;\r\n  color?: string;\r\n  fontSize?: string;\r\n  fontFamily?: string;\r\n  fontWeight?: string | number;\r\n  cssClass?: string;\r\n  padding?: {\r\n    left?: number;\r\n    right?: number;\r\n    top?: number;\r\n    bottom?: number;\r\n  };\r\n}\r\nexport interface XAxisAnnotations {\r\n  x?: null | number | string;\r\n  x2?: null | number | string;\r\n  strokeDashArray?: number;\r\n  fillColor?: string;\r\n  borderColor?: string;\r\n  borderWidth?: number;\r\n  opacity?: number;\r\n  offsetX?: number;\r\n  offsetY?: number;\r\n  label?: AnnotationLabel;\r\n}\r\nexport interface YAxisAnnotations {\r\n  y?: null | number | string;\r\n  y2?: null | number | string;\r\n  strokeDashArray?: number;\r\n  fillColor?: string;\r\n  borderColor?: string;\r\n  borderWidth?: number;\r\n  opacity?: number;\r\n  offsetX?: number;\r\n  offsetY?: number;\r\n  width?: number | string;\r\n  yAxisIndex?: number;\r\n  label?: AnnotationLabel;\r\n}\r\nexport interface PointAnnotations {\r\n  x?: number | string;\r\n  y?: null | number;\r\n  yAxisIndex?: number;\r\n  seriesIndex?: number;\r\n  marker?: {\r\n    size?: number;\r\n    fillColor?: string;\r\n    strokeColor?: string;\r\n    strokeWidth?: number;\r\n    shape?: string;\r\n    offsetX?: number;\r\n    offsetY?: number;\r\n    radius?: number;\r\n    cssClass?: string;\r\n  };\r\n  label?: AnnotationLabel;\r\n  image?: {\r\n    path?: string;\r\n    width?: number;\r\n    height?: number;\r\n    offsetX?: number;\r\n    offsetY?: number;\r\n  };\r\n}\r\n\r\nexport interface ImageAnnotations {\r\n  path?: string;\r\n  x?: number;\r\n  y?: number;\r\n  width?: number;\r\n  height?: number;\r\n  appendTo?: string;\r\n}\r\n\r\nexport interface TextAnnotations {\r\n  x?: number;\r\n  y?: number;\r\n  text?: string;\r\n  textAnchor?: string;\r\n  foreColor?: string;\r\n  fontSize?: string | number;\r\n  fontFamily?: undefined | string;\r\n  fontWeight?: string | number;\r\n  appendTo?: string;\r\n  backgroundColor?: string;\r\n  borderColor?: string;\r\n  borderRadius?: number;\r\n  borderWidth?: number;\r\n  paddingLeft?: number;\r\n  paddingRight?: number;\r\n  paddingTop?: number;\r\n  paddingBottom?: number;\r\n}\r\n\r\n/**\r\n * Options for localization.\r\n * See https://apexcharts.com/docs/options/chart/locales\r\n */\r\nexport interface ApexLocale {\r\n  name?: string;\r\n  options?: {\r\n    months?: string[];\r\n    shortMonths?: string[];\r\n    days?: string[];\r\n    shortDays?: string[];\r\n    toolbar?: {\r\n      download?: string;\r\n      selection?: string;\r\n      selectionZoom?: string;\r\n      zoomIn?: string;\r\n      zoomOut?: string;\r\n      pan?: string;\r\n      reset?: string;\r\n    };\r\n  };\r\n}\r\n\r\n/**\r\n * PlotOptions for specifying chart-type-specific configuration.\r\n * See https://apexcharts.com/docs/options/plotoptions/bar/\r\n */\r\nexport interface ApexPlotOptions {\r\n  area?: {\r\n    fillTo?: \"origin\" | \"end\";\r\n  };\r\n  bar?: {\r\n    horizontal?: boolean;\r\n    startingShape?: \"flat\" | \"rounded\";\r\n    endingShape?: \"flat\" | \"rounded\";\r\n    columnWidth?: string;\r\n    barHeight?: string;\r\n    distributed?: boolean;\r\n    rangeBarOverlap?: boolean;\r\n    rangeBarGroupRows?: boolean;\r\n    colors?: {\r\n      ranges?: {\r\n        from?: number;\r\n        to?: number;\r\n        color?: string;\r\n      }[];\r\n      backgroundBarColors?: string[];\r\n      backgroundBarOpacity?: number;\r\n      backgroundBarRadius?: number;\r\n    };\r\n    dataLabels?: {\r\n      maxItems?: number;\r\n      hideOverflowingLabels?: boolean;\r\n      position?: string;\r\n      orientation?: \"horizontal\" | \"vertical\";\r\n    };\r\n  };\r\n  bubble?: {\r\n    minBubbleRadius?: number;\r\n    maxBubbleRadius?: number;\r\n  };\r\n  candlestick?: {\r\n    colors?: {\r\n      upward?: string;\r\n      downward?: string;\r\n    };\r\n    wick?: {\r\n      useFillColor?: boolean;\r\n    };\r\n  };\r\n  heatmap?: {\r\n    radius?: number;\r\n    enableShades?: boolean;\r\n    shadeIntensity?: number;\r\n    reverseNegativeShade?: boolean;\r\n    distributed?: boolean;\r\n    useFillColorAsStroke?: boolean;\r\n    colorScale?: {\r\n      ranges?: {\r\n        from?: number;\r\n        to?: number;\r\n        color?: string;\r\n        foreColor?: string;\r\n        name?: string;\r\n      }[];\r\n      inverse?: boolean;\r\n      min?: number;\r\n      max?: number;\r\n    };\r\n  };\r\n  treemap?: {\r\n    enableShades?: boolean;\r\n    shadeIntensity?: number;\r\n    distributed?: boolean;\r\n    reverseNegativeShade?: boolean;\r\n    useFillColorAsStroke?: boolean;\r\n    colorScale?: {\r\n      inverse?: boolean;\r\n      ranges?: {\r\n        from?: number;\r\n        to?: number;\r\n        color?: string;\r\n        foreColor?: string;\r\n        name?: string;\r\n      }[];\r\n      min?: number;\r\n      max?: number;\r\n    };\r\n  };\r\n  pie?: {\r\n    startAngle?: number;\r\n    endAngle?: number;\r\n    customScale?: number;\r\n    offsetX?: number;\r\n    offsetY?: number;\r\n    expandOnClick?: boolean;\r\n    dataLabels?: {\r\n      offset?: number;\r\n      minAngleToShowLabel?: number;\r\n    };\r\n    donut?: {\r\n      size?: string;\r\n      background?: string;\r\n      labels?: {\r\n        show?: boolean;\r\n        name?: {\r\n          show?: boolean;\r\n          fontSize?: string;\r\n          fontFamily?: string;\r\n          fontWeight?: string | number;\r\n          color?: string;\r\n          offsetY?: number;\r\n          formatter?(val: string): string;\r\n        };\r\n        value?: {\r\n          show?: boolean;\r\n          fontSize?: string;\r\n          fontFamily?: string;\r\n          fontWeight?: string | number;\r\n          color?: string;\r\n          offsetY?: number;\r\n          formatter?(val: string): string;\r\n        };\r\n        total?: {\r\n          show?: boolean;\r\n          showAlways?: boolean;\r\n          fontFamily?: string;\r\n          fontSize?: string;\r\n          fontWeight?: string | number;\r\n          label?: string;\r\n          color?: string;\r\n          formatter?(w: any): string;\r\n        };\r\n      };\r\n    };\r\n  };\r\n  polarArea?: {\r\n    rings?: {\r\n      strokeWidth?: number;\r\n      strokeColor?: string;\r\n    };\r\n  };\r\n  radar?: {\r\n    size?: number;\r\n    offsetX?: number;\r\n    offsetY?: number;\r\n    polygons?: {\r\n      strokeColors?: string | string[];\r\n      strokeWidth?: string | string[];\r\n      connectorColors?: string | string[];\r\n      fill?: {\r\n        colors?: string[];\r\n      };\r\n    };\r\n  };\r\n  radialBar?: {\r\n    inverseOrder?: boolean;\r\n    startAngle?: number;\r\n    endAngle?: number;\r\n    offsetX?: number;\r\n    offsetY?: number;\r\n    hollow?: {\r\n      margin?: number;\r\n      size?: string;\r\n      background?: string;\r\n      image?: string;\r\n      imageWidth?: number;\r\n      imageHeight?: number;\r\n      imageOffsetX?: number;\r\n      imageOffsetY?: number;\r\n      imageClipped?: boolean;\r\n      position?: \"front\" | \"back\";\r\n      dropShadow?: ApexDropShadow;\r\n    };\r\n    track?: {\r\n      show?: boolean;\r\n      startAngle?: number;\r\n      endAngle?: number;\r\n      background?: string;\r\n      strokeWidth?: string;\r\n      opacity?: number;\r\n      margin?: number;\r\n      dropShadow?: ApexDropShadow;\r\n    };\r\n    dataLabels?: {\r\n      show?: boolean;\r\n      name?: {\r\n        show?: boolean;\r\n        fontSize?: string;\r\n        fontFamily?: string;\r\n        fontWeight?: string | number;\r\n        color?: string;\r\n        offsetY?: number;\r\n      };\r\n      value?: {\r\n        show?: boolean;\r\n        fontSize?: string;\r\n        fontFamily?: string;\r\n        fontWeight?: string | number;\r\n        color?: string;\r\n        offsetY?: number;\r\n        formatter?(val: number): string;\r\n      };\r\n      total?: {\r\n        show?: boolean;\r\n        label?: string;\r\n        fontFamily?: string;\r\n        fontSize?: string;\r\n        fontWeight?: string | number;\r\n        color?: string;\r\n        formatter?(opts: any): string;\r\n      };\r\n    };\r\n  };\r\n}\r\n\r\nexport interface ApexFill {\r\n  colors?: any[];\r\n  opacity?: number | number[];\r\n  type?: string | string[];\r\n  gradient?: {\r\n    shade?: string;\r\n    type?: string;\r\n    shadeIntensity?: number;\r\n    gradientToColors?: string[];\r\n    inverseColors?: boolean;\r\n    opacityFrom?: number;\r\n    opacityTo?: number;\r\n    stops?: number[];\r\n  };\r\n  image?: {\r\n    src?: string | string[];\r\n    width?: number;\r\n    height?: number;\r\n  };\r\n  pattern?: {\r\n    style?: string | string[];\r\n    width?: number;\r\n    height?: number;\r\n    strokeWidth?: number;\r\n  };\r\n}\r\n\r\n/**\r\n * Chart Legend configuration options.\r\n * See https://apexcharts.com/docs/options/legend/\r\n */\r\nexport interface ApexLegend {\r\n  show?: boolean;\r\n  showForSingleSeries?: boolean;\r\n  showForNullSeries?: boolean;\r\n  showForZeroSeries?: boolean;\r\n  floating?: boolean;\r\n  inverseOrder?: boolean;\r\n  position?: \"top\" | \"right\" | \"bottom\" | \"left\";\r\n  horizontalAlign?: \"left\" | \"center\" | \"right\";\r\n  fontSize?: string;\r\n  fontFamily?: string;\r\n  fontWeight?: string | number;\r\n  width?: number;\r\n  height?: number;\r\n  offsetX?: number;\r\n  offsetY?: number;\r\n  textAnchor?: string;\r\n  labels?: {\r\n    colors?: string | string[];\r\n    useSeriesColors?: boolean;\r\n  };\r\n  markers?: {\r\n    width?: number;\r\n    height?: number;\r\n    strokeColor?: string;\r\n    strokeWidth?: number;\r\n    fillColors?: string[];\r\n    offsetX?: number;\r\n    offsetY?: number;\r\n    radius?: number;\r\n    customHTML?(): any;\r\n    onClick?(): void;\r\n  };\r\n  itemMargin?: {\r\n    horizontal?: number;\r\n    vertical?: number;\r\n  };\r\n  containerMargin?: {\r\n    left?: number;\r\n    top?: number;\r\n  };\r\n  onItemClick?: {\r\n    toggleDataSeries?: boolean;\r\n  };\r\n  onItemHover?: {\r\n    highlightDataSeries?: boolean;\r\n  };\r\n  formatter?(legendName: string, opts?: any): string;\r\n  tooltipHoverFormatter?(legendName: string, opts?: any): string;\r\n}\r\n\r\n/**\r\n * Chart Datalabels options\r\n * See https://apexcharts.com/docs/options/datalabels/\r\n */\r\nexport interface ApexDataLabels {\r\n  enabled?: boolean;\r\n  enabledOnSeries?: undefined | number[];\r\n  textAnchor?: \"start\" | \"middle\" | \"end\";\r\n  distributed?: boolean;\r\n  offsetX?: number;\r\n  offsetY?: number;\r\n  style?: {\r\n    fontSize?: string;\r\n    fontFamily?: string;\r\n    fontWeight?: string | number;\r\n    colors?: string[];\r\n  };\r\n  background?: {\r\n    enabled?: boolean;\r\n    foreColor?: string;\r\n    borderRadius?: number;\r\n    padding?: number;\r\n    opacity?: number;\r\n    borderWidth?: number;\r\n    borderColor?: string;\r\n    dropShadow?: ApexDropShadow;\r\n  };\r\n  dropShadow?: ApexDropShadow;\r\n  formatter?(val: number, opts?: any): string | number;\r\n}\r\n\r\nexport interface ApexResponsive {\r\n  breakpoint?: number;\r\n  options?: any;\r\n}\r\n\r\ntype ApexTooltipY = {\r\n  title?: {\r\n    formatter?(seriesName: string): string;\r\n  };\r\n  formatter?(val: number, opts?: any): string;\r\n};\r\n/**\r\n * Chart Tooltip options\r\n * See https://apexcharts.com/docs/options/tooltip/\r\n */\r\nexport interface ApexTooltip {\r\n  enabled?: boolean;\r\n  enabledOnSeries?: undefined | number[];\r\n  shared?: boolean;\r\n  followCursor?: boolean;\r\n  intersect?: boolean;\r\n  inverseOrder?: boolean;\r\n  custom?: ((options: any) => any) | ((options: any) => any)[];\r\n  fillSeriesColor?: boolean;\r\n  theme?: string;\r\n  style?: {\r\n    fontSize?: string;\r\n    fontFamily?: string;\r\n  };\r\n  onDatasetHover?: {\r\n    highlightDataSeries?: boolean;\r\n  };\r\n  x?: {\r\n    show?: boolean;\r\n    format?: string;\r\n    formatter?(val: number, opts?: any): string;\r\n  };\r\n  y?: ApexTooltipY | ApexTooltipY[];\r\n  z?: {\r\n    title?: string;\r\n    formatter?(val: number): string;\r\n  };\r\n  marker?: {\r\n    show?: boolean;\r\n    fillColors?: string[];\r\n  };\r\n  items?: {\r\n    display?: string;\r\n  };\r\n  fixed?: {\r\n    enabled?: boolean;\r\n    position?: string; // topRight; topLeft; bottomRight; bottomLeft\r\n    offsetX?: number;\r\n    offsetY?: number;\r\n  };\r\n}\r\n\r\n/**\r\n * X Axis options\r\n * See https://apexcharts.com/docs/options/xaxis/\r\n */\r\nexport interface ApexXAxis {\r\n  type?: \"category\" | \"datetime\" | \"numeric\";\r\n  categories?: any;\r\n  offsetX?: number;\r\n  offsetY?: number;\r\n  sorted?: boolean;\r\n  labels?: {\r\n    show?: boolean;\r\n    rotate?: number;\r\n    rotateAlways?: boolean;\r\n    hideOverlappingLabels?: boolean;\r\n    showDuplicates?: boolean;\r\n    trim?: boolean;\r\n    minHeight?: number;\r\n    maxHeight?: number;\r\n    style?: {\r\n      colors?: string | string[];\r\n      fontSize?: string;\r\n      fontWeight?: string | number;\r\n      fontFamily?: string;\r\n      cssClass?: string;\r\n    };\r\n    offsetX?: number;\r\n    offsetY?: number;\r\n    format?: string;\r\n    datetimeUTC?: boolean;\r\n    datetimeFormatter?: {\r\n      year?: string;\r\n      month?: string;\r\n      day?: string;\r\n      hour?: string;\r\n      minute?: string;\r\n    };\r\n    formatter?(\r\n      value: string,\r\n      timestamp?: number,\r\n      opts?: any\r\n    ): string | string[];\r\n  };\r\n  axisBorder?: {\r\n    show?: boolean;\r\n    color?: string;\r\n    offsetX?: number;\r\n    offsetY?: number;\r\n    strokeWidth?: number;\r\n  };\r\n  axisTicks?: {\r\n    show?: boolean;\r\n    borderType?: string;\r\n    color?: string;\r\n    height?: number;\r\n    offsetX?: number;\r\n    offsetY?: number;\r\n  };\r\n  tickPlacement?: string;\r\n  tickAmount?: number | \"dataPoints\";\r\n  min?: number;\r\n  max?: number;\r\n  range?: number;\r\n  floating?: boolean;\r\n  position?: string;\r\n  title?: {\r\n    text?: string;\r\n    offsetX?: number;\r\n    offsetY?: number;\r\n    style?: {\r\n      color?: string;\r\n      fontFamily?: string;\r\n      fontWeight?: string | number;\r\n      fontSize?: string;\r\n      cssClass?: string;\r\n    };\r\n  };\r\n  crosshairs?: {\r\n    show?: boolean;\r\n    width?: number | string;\r\n    position?: string;\r\n    opacity?: number;\r\n    stroke?: {\r\n      color?: string;\r\n      width?: number;\r\n      dashArray?: number;\r\n    };\r\n    fill?: {\r\n      type?: string;\r\n      color?: string;\r\n      gradient?: {\r\n        colorFrom?: string;\r\n        colorTo?: string;\r\n        stops?: number[];\r\n        opacityFrom?: number;\r\n        opacityTo?: number;\r\n      };\r\n    };\r\n    dropShadow?: ApexDropShadow;\r\n  };\r\n  tooltip?: {\r\n    enabled?: boolean;\r\n    offsetY?: number;\r\n    style?: {\r\n      fontSize?: string;\r\n      fontFamily?: string;\r\n    };\r\n    formatter?(value: string, opts?: object): string;\r\n  };\r\n}\r\n\r\n/**\r\n * Y Axis options\r\n * See https://apexcharts.com/docs/options/yaxis/\r\n */\r\nexport interface ApexYAxis {\r\n  show?: boolean;\r\n  showAlways?: boolean;\r\n  showForNullSeries?: boolean;\r\n  seriesName?: string;\r\n  opposite?: boolean;\r\n  reversed?: boolean;\r\n  logarithmic?: boolean;\r\n  tickAmount?: number;\r\n  forceNiceScale?: boolean;\r\n  min?: number | ((min: number) => number);\r\n  max?: number | ((max: number) => number);\r\n  floating?: boolean;\r\n  decimalsInFloat?: number;\r\n  labels?: {\r\n    show?: boolean;\r\n    minWidth?: number;\r\n    maxWidth?: number;\r\n    offsetX?: number;\r\n    offsetY?: number;\r\n    rotate?: number;\r\n    align?: \"left\" | \"center\" | \"right\";\r\n    padding?: number;\r\n    style?: {\r\n      colors?: string;\r\n      fontSize?: string;\r\n      fontFamily?: string;\r\n      fontWeight?: string | number;\r\n      cssClass?: string;\r\n    };\r\n    formatter?(val: number, opts?: any): string;\r\n  };\r\n  axisBorder?: {\r\n    show?: boolean;\r\n    color?: string;\r\n    width?: number;\r\n    offsetX?: number;\r\n    offsetY?: number;\r\n  };\r\n  axisTicks?: {\r\n    show?: boolean;\r\n    color?: string;\r\n    width?: number;\r\n    offsetX?: number;\r\n    offsetY?: number;\r\n  };\r\n  title?: {\r\n    text?: string;\r\n    rotate?: number;\r\n    offsetX?: number;\r\n    offsetY?: number;\r\n    style?: {\r\n      color?: string;\r\n      fontSize?: string;\r\n      fontFamily?: string;\r\n      fontWeight?: string | number;\r\n      cssClass?: string;\r\n    };\r\n  };\r\n  crosshairs?: {\r\n    show?: boolean;\r\n    position?: string;\r\n    stroke?: {\r\n      color?: string;\r\n      width?: number;\r\n      dashArray?: number;\r\n    };\r\n  };\r\n  tooltip?: {\r\n    enabled?: boolean;\r\n    offsetX?: number;\r\n  };\r\n}\r\n\r\n/**\r\n * Plot X and Y grid options\r\n * See https://apexcharts.com/docs/options/grid/\r\n */\r\nexport interface ApexGrid {\r\n  show?: boolean;\r\n  borderColor?: string;\r\n  strokeDashArray?: number;\r\n  position?: \"front\" | \"back\";\r\n  xaxis?: {\r\n    lines?: {\r\n      show?: boolean;\r\n      offsetX?: number;\r\n      offsetY?: number;\r\n    };\r\n  };\r\n  yaxis?: {\r\n    lines?: {\r\n      show?: boolean;\r\n      offsetX?: number;\r\n      offsetY?: number;\r\n    };\r\n  };\r\n  row?: {\r\n    colors?: string[];\r\n    opacity?: number;\r\n  };\r\n  column?: {\r\n    colors?: string[];\r\n    opacity?: number;\r\n  };\r\n  padding?: {\r\n    top?: number;\r\n    right?: number;\r\n    bottom?: number;\r\n    left?: number;\r\n  };\r\n}\r\n\r\nexport interface ApexTheme {\r\n  mode?: \"light\" | \"dark\";\r\n  palette?: string;\r\n  monochrome?: {\r\n    enabled?: boolean;\r\n    color?: string;\r\n    shadeTo?: \"light\" | \"dark\";\r\n    shadeIntensity?: number;\r\n  };\r\n}\r\n\r\ninterface ApexDiscretePoint {\r\n  seriesIndex?: number;\r\n  dataPointIndex?: number;\r\n  fillColor?: string;\r\n  strokeColor?: string;\r\n  size?: number;\r\n}\r\n\r\nexport interface ApexMarkers {\r\n  size?: number | number[];\r\n  colors?: string[];\r\n  strokeColors?: string | string[];\r\n  strokeWidth?: number | number[];\r\n  strokeOpacity?: number | number[];\r\n  strokeDashArray?: number | number[];\r\n  fillOpacity?: number | number[];\r\n  discrete?: ApexDiscretePoint[];\r\n  shape?: \"circle\" | \"square\" | string[];\r\n  radius?: number;\r\n  offsetX?: number;\r\n  offsetY?: number;\r\n  showNullDataPoints?: boolean;\r\n  hover?: {\r\n    size?: number;\r\n    sizeOffset?: number;\r\n  };\r\n  onClick?(e?: any): void;\r\n  onDblClick?(e?: any): void;\r\n}\r\n\r\nexport interface ApexNoData {\r\n  text?: string;\r\n  align?: \"left\" | \"right\" | \"center\";\r\n  verticalAlign?: \"top\" | \"middle\" | \"bottom\";\r\n  offsetX?: number;\r\n  offsetY?: number;\r\n  style?: {\r\n    color?: string;\r\n    fontSize?: string;\r\n    fontFamily?: string;\r\n  };\r\n}\r\n\r\nexport type ChartType =\r\n  | \"line\"\r\n  | \"area\"\r\n  | \"bar\"\r\n  | \"histogram\"\r\n  | \"pie\"\r\n  | \"donut\"\r\n  | \"radialBar\"\r\n  | \"scatter\"\r\n  | \"bubble\"\r\n  | \"heatmap\"\r\n  | \"candlestick\"\r\n  | \"radar\"\r\n  | \"polarArea\"\r\n  | \"rangeBar\"\r\n  | \"treemap\";\r\n","/*\r\n * Public API Surface of ng-apexcharts\r\n */\r\n\r\nexport * from './lib/ng-apexcharts.module';\r\nexport * from './lib/chart/chart.component';\r\nexport * from './lib/model/apex-types';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelement"],"mappings":"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"}